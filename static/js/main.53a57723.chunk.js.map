{"version":3,"sources":["components/Statistics/MarksHead.js","components/Statistics/Marks.js","components/Statistics/Statistics.js","components/Sections/Sections.js","App.js","reportWebVitals.js","index.js","components/Statistics/statistics.module.css","components/Statistics/marks.module.css"],"names":["MarksHead","className","styles","marksHead","Marks","marks","changeMark","Object","keys","map","key","type","onClick","Statistics","countTotalFeedback","countPositiveFeedbackPercentage","StatisticsHead","statEl","totalFeedback","noFeedback","Sections","this","props","Component","App","state","Good","Neutral","Bad","markKey","setState","values","value","goodFeedbackShare","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wRASeA,EANG,kBAEd,oBAAKC,UAAWC,IAAOC,UAAvB,qCCSWC,EAXD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OAEVC,OAAOC,KAAKH,GAAOI,KAAI,SAAAC,GAAG,OAEtB,wBAAQC,KAAK,SAASV,UAAWC,IAAOG,MAAiBO,QAAS,kBAAMN,EAAWI,IAAnF,SACK,CAACA,IAD8CA,O,gBC0B7CG,EA9BI,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAOS,EAAV,EAAUA,mBAAoBC,EAA9B,EAA8BA,gCAA9B,OACf,oCACI,oBAAId,UAAWC,IAAOc,eAAtB,wBAE0B,IAAzBF,KAA8B,gCAC9B,oBAAIb,UAAU,gBAAd,SAEAM,OAAOC,KAAKH,GAAOI,KAAI,SAAAC,GAAG,OAE3B,qBAAIT,UAAWC,IAAOe,OAAtB,UACE,CAACP,GADH,MACYL,EAAMK,KADiBA,QAMnC,sBAAKT,UAAWC,IAAOgB,cAAvB,oBACQJ,OAER,sBAAKb,UAAWC,IAAOgB,cAAvB,gCACqBH,IADrB,UAM0B,IAAzBD,KAA8B,qBAAKb,UAAWC,IAAOiB,WAAvB,mCCNxBC,E,4JAdb,WAIE,OACE,qCAEE,cAAC,EAAD,CAAiBf,MAAOgB,KAAKC,MAAMjB,MAAOC,WAAYe,KAAKC,MAAMhB,aACjE,cAAC,EAAD,CAAYD,MAAOgB,KAAKC,MAAMjB,MAAOS,mBAAoBO,KAAKC,MAAMR,mBAAoBC,gCAAiCM,KAAKC,MAAMP,yC,GAVrHQ,aCwDRC,E,4MAtDbC,MAAQ,CACNpB,MAAO,CACLqB,KAAM,EACNC,QAAS,EACTC,IAAK,I,EAKTtB,WAAa,SAACuB,GACZ,IAAQxB,EAAU,EAAKoB,MAAfpB,MACV,EAAKyB,SAAS,CAACzB,MAAM,2BAAKA,GAAN,kBAAcwB,EAASxB,EAAMwB,GAAW,O,EAI5Df,mBAAqB,WACnB,IAAQT,EAAU,EAAKoB,MAAfpB,MACJa,EAAgB,EAKpB,OAJAX,OAAOwB,OAAO1B,GAAOI,KAAI,SAAAuB,GAAK,OAC5Bd,GAAiBc,KAGZd,G,EAITH,gCAAkC,WAEhC,IACIkB,EAIJ,OAFAA,EAHkB,EAAKR,MAAfpB,MAGkBqB,KAAO,EAAKZ,qBAAuB,IAC3BoB,KAAKC,MAAMF,I,4CAM/C,WACC,IAAQ5B,EAAUgB,KAAKI,MAAfpB,MAIP,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUA,MAAOA,EAAOC,WAAYe,KAAKf,WAAYQ,mBAAoBO,KAAKP,mBAAoBC,gCAAiCM,KAAKN,yC,GA/C9HQ,aCMHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,OAAS,2BAA2B,cAAgB,kCAAkC,WAAa,iC,kBCAzKD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,wB","file":"static/js/main.53a57723.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from '../Statistics/marks.module.css'\r\n\r\nconst MarksHead = () => (\r\n\r\n    < h2 className={styles.marksHead} > Please leave Feedback</h2 >\r\n\r\n);\r\n\r\nexport default MarksHead;\r\n\r\n","import React from 'react';\r\nimport styles from '../Statistics/marks.module.css'\r\n\r\nconst Marks = ({ marks, changeMark }) => (\r\n\r\n    Object.keys(marks).map(key => (\r\n\r\n        <button type=\"button\" className={styles.marks} key={key} onClick={() => changeMark(key)}>\r\n            {[key]}\r\n        </button>\r\n    ))\r\n\r\n);\r\n\r\nexport default Marks;\r\n\r\n","import React from 'react';\r\nimport styles from '../Statistics/statistics.module.css'\r\n\r\nconst Statistics = ({ marks, countTotalFeedback, countPositiveFeedbackPercentage }) => (\r\n    <section>\r\n        <h2 className={styles.StatisticsHead}>Statistics</h2>\r\n         \r\n        {countTotalFeedback() !== 0 && <div>\r\n         <ul className=\"StatisticList\">\r\n        \r\n        {Object.keys(marks).map(key => (\r\n\r\n        <li className={styles.statEl} key={key}>\r\n         {[key]} : {marks[key]}\r\n        </li>\r\n                                        ))\r\n        }\r\n        </ul>\r\n        <div className={styles.totalFeedback} >\r\n        Total: {countTotalFeedback()}\r\n        </div>\r\n        <div className={styles.totalFeedback}>\r\n        Positive feedback: { countPositiveFeedbackPercentage() }%\r\n        </div>\r\n        \r\n        </div>}\r\n\r\n        {countTotalFeedback() === 0 && <div className={styles.noFeedback}>No feedback given</div>}\r\n   \r\n    </section>\r\n     \r\n);\r\n\r\nexport default Statistics;\r\n\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from '../Statistics/Marks';\r\nimport Statistics from '../Statistics/Statistics'\r\n\r\n\r\nclass Sections extends Component {\r\n  \r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n       \r\n        <FeedbackOptions marks={this.props.marks} changeMark={this.props.changeMark} />\r\n        <Statistics marks={this.props.marks} countTotalFeedback={this.props.countTotalFeedback} countPositiveFeedbackPercentage={this.props.countPositiveFeedbackPercentage} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sections;","import React, { Component } from 'react';\n// import FeedbackOptions from './components/Statistics/Marks'\nimport MarksHead from './components/Statistics/MarksHead';\n// import Statistics from './components/Statistics/Statistics';\nimport Sections from './components/Sections/Sections'\n\nclass App extends Component {\n  state = {\n    marks: {\n      Good: 0,\n      Neutral: 0,\n      Bad: 0\n    }\n  };\n\n\n  changeMark = (markKey) => {\n    const { marks } = this.state;\n  this.setState({marks: {...marks, [markKey]:marks[markKey] + 1}})\n  };\n\n \n  countTotalFeedback = () => {\n    const { marks } = this.state;\n    let totalFeedback = 0;\n    Object.values(marks).map(value => (\n      totalFeedback += value\n    ))\n\n    return totalFeedback;\n  };\n\n  \n  countPositiveFeedbackPercentage = () => {\n   \n    const { marks } = this.state;\n    let goodFeedbackShare = 0;\n\n    goodFeedbackShare = marks.Good / this.countTotalFeedback() * 100;\n    let normalizedGoodFeedbackShare = Math.round(goodFeedbackShare);\n    return normalizedGoodFeedbackShare;\n    \n  };\n\n\n  render() {\n   const { marks } = this.state;\n\n\n    \n    return (\n      <>\n        <MarksHead />\n        <Sections marks={marks} changeMark={this.changeMark} countTotalFeedback={this.countTotalFeedback} countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}/>\n        {/* <FeedbackOptions marks={marks} changeMark={this.changeMark} />\n        <Statistics marks={marks} countTotalFeedback={this.countTotalFeedback} countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage} /> */}\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsHead\":\"statistics_StatisticsHead___e69S\",\"statEl\":\"statistics_statEl__EVpeN\",\"totalFeedback\":\"statistics_totalFeedback__28PCN\",\"noFeedback\":\"statistics_noFeedback__1ogKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marksHead\":\"marks_marksHead__3tglg\",\"marks\":\"marks_marks__3MnP3\"};"],"sourceRoot":""}